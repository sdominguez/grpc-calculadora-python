# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import calculadora_pb2 as calculadora__pb2


class CalculadoraServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.suma = channel.unary_unary(
                '/calc.CalculadoraService/suma',
                request_serializer=calculadora__pb2.OperacionRequest.SerializeToString,
                response_deserializer=calculadora__pb2.OperacionResponse.FromString,
                )
        self.resta = channel.unary_unary(
                '/calc.CalculadoraService/resta',
                request_serializer=calculadora__pb2.OperacionRequest.SerializeToString,
                response_deserializer=calculadora__pb2.OperacionResponse.FromString,
                )
        self.mult = channel.unary_unary(
                '/calc.CalculadoraService/mult',
                request_serializer=calculadora__pb2.OperacionRequest.SerializeToString,
                response_deserializer=calculadora__pb2.OperacionResponse.FromString,
                )
        self.div = channel.unary_unary(
                '/calc.CalculadoraService/div',
                request_serializer=calculadora__pb2.OperacionRequest.SerializeToString,
                response_deserializer=calculadora__pb2.OperacionResponse.FromString,
                )


class CalculadoraServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def suma(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def mult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def div(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CalculadoraServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'suma': grpc.unary_unary_rpc_method_handler(
                    servicer.suma,
                    request_deserializer=calculadora__pb2.OperacionRequest.FromString,
                    response_serializer=calculadora__pb2.OperacionResponse.SerializeToString,
            ),
            'resta': grpc.unary_unary_rpc_method_handler(
                    servicer.resta,
                    request_deserializer=calculadora__pb2.OperacionRequest.FromString,
                    response_serializer=calculadora__pb2.OperacionResponse.SerializeToString,
            ),
            'mult': grpc.unary_unary_rpc_method_handler(
                    servicer.mult,
                    request_deserializer=calculadora__pb2.OperacionRequest.FromString,
                    response_serializer=calculadora__pb2.OperacionResponse.SerializeToString,
            ),
            'div': grpc.unary_unary_rpc_method_handler(
                    servicer.div,
                    request_deserializer=calculadora__pb2.OperacionRequest.FromString,
                    response_serializer=calculadora__pb2.OperacionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'calc.CalculadoraService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CalculadoraService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def suma(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calc.CalculadoraService/suma',
            calculadora__pb2.OperacionRequest.SerializeToString,
            calculadora__pb2.OperacionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def resta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calc.CalculadoraService/resta',
            calculadora__pb2.OperacionRequest.SerializeToString,
            calculadora__pb2.OperacionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def mult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calc.CalculadoraService/mult',
            calculadora__pb2.OperacionRequest.SerializeToString,
            calculadora__pb2.OperacionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def div(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calc.CalculadoraService/div',
            calculadora__pb2.OperacionRequest.SerializeToString,
            calculadora__pb2.OperacionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
